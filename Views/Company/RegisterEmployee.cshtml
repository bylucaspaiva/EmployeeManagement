@model EmployeeManagement.DTOs.EmployeeDTO
@{
    ViewData["Title"] = "Cadastrar Funcionários";
}

<h1>Cadastrar Funcionário</h1>

<form asp-action="AddEmployee" method="post">
    <div class="form-group">
        <label asp-for="RegisterNumber" class="control-label">Matrícula</label>
        <input asp-for="RegisterNumber" class="form-control" 
            pattern="^[A-Z]{2}\d{4}$" title="Formato de matrícula inválido. O formato correto é CCNNNN (ex. AA1234, AB9876)" />
        <span asp-validation-for="RegisterNumber" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Name" class="control-label">Nome</label>
        <input asp-for="Name" class="form-control" pattern="^.{3,50}$" title="O nome deve conter entre 3 e 50 caracteres." />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CPF" class="control-label">CPF</label>
        <input asp-for="CPF" class="form-control" pattern="^\d{11}$" title="CPF inválido. O CPF deve conter exatamente 11 dígitos." />
        <span class="invalid-feedback">@Html.ValidationMessageFor(model => model.CPF)</span>
        <small class="text-danger">@ViewData.ModelState["CPF"]?.Errors[0].ErrorMessage</small>
    </div>
    <div class="form-group">
        <input type="submit" value="Cadastrar" class="btn btn-primary" />
    </div>
</form>
